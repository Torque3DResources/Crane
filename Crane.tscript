
// The general flow of a gane - server's creation, loading and hosting clients, and then destruction is as follows:

// First, a client will always create a server in the event that they want to host a single player
// game. Torque3D treats even single player connections as a soft multiplayer game, with some stuff
// in the networking short-circuited to sidestep around lag and packet transmission times.

// initServer() is called, loading the default server scripts.
// After that, if this is a dedicated server session, initDedicated() is called, otherwise initClient is called
// to prep a playable client session.

// When a local game is started - a listen server - via calling StartGame() a server is created and then the client is
// connected to it via createAndConnectToLocalServer().

function Crane::onCreate( %this )
{
}

function Crane::onDestroy( %this )
{
}

function Crane::initServer(%this)
{
   %this.queueExec("./scripts/server/crane");
   %this.queueExec("./scripts/server/vehicle");
}

function Crane::onCreateGameServer(%this)
{
   %this.registerDatablock("./scripts/managedData/managedParticleData");
   %this.registerDatablock("./scripts/managedData/managedParticleEmitterData");
   %this.registerDatablock("./datablocks/fx/grenadefx");
   %this.registerDatablock("./datablocks/vehicles/CranePlane");
}

function Crane::onDestroyGameServer(%this)
{
}

function Crane::initClient(%this)
{
   %this.queueExec("./scripts/client/inputCommands");   
    %this.queueExec("./scripts/client/client");
    
   //keybind scripts   
   %this.queueExec("./scripts/client/defaultkeybinds");   
   %prefPath = getPrefpath();
   if(isScriptFile(%prefPath @ "/keybinds"))
      exec(%prefPath @ "/keybinds");
    %this.queueExec("./scripts/client/client");
}

function Crane::onCreateClientConnection(%this)
{
}

function Crane::onDestroyClientConnection(%this)
{
}